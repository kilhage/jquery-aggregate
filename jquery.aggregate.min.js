/*--------------------------------------------*
 * https://github.com/kilhage/jquery-aggregate
 *--------------------------------------------*
 * Author Emil Kilhage
 * MIT Licensed
 *--------------------------------------------*
 * Last Update: 2011-04-08 00:20:15
 * Version x
 *--------------------------------------------*/
(function(c,o){var j=["target","source"],l=Array.prototype.slice,k={aggregate:function(){return this.trigger("aggregate")},remove:function(){var a=arguments;return this.each(function(){var b=c.aggregator.get(this);c.aggregator.isHandler(b)&&b.destroy.apply(b,a)})},get:function(){var a=this[0],b=false;if(a){a=c.aggregator.get(a);if(c.aggregator.isHandler(a))b=a.get.apply(a,arguments)}return b}};c.fn.aggregate=function(a,b,d){var g=typeof a,e={},f=arguments;if(!a)return k.aggregate.apply(this,l.call(f,
1));if(g=="string"&&c.type(k[a])=="function")return k[a].apply(this,l.call(f,1));if(g==="function")return this.bind("aggregate",a);if(g=="string"||a.nodeType||a.jquery){e.target=a;if(typeof oarser=="function")this.bind("aggregate",b);else if(b)e.parser=b;if(d)e.method=d}else if(g=="object")e=a;return new c.aggregator(this,e)};c.aggregator=function(a,b){var d=this;if(!c.aggregator.isAggregator(d))return new c.aggregator(a,b);this.aggregateCallback=function(){d.aggregate()};d.source=c(a);b=d.options=
c.aggregator.parseOptions(b);d.target=c(b.target);delete b.target;d.updateAttrs().bind();d.value=d.getAggregatedValue();d.options.start_by_aggregate===true&&d.aggregate()};c.extend(c.aggregator,{DATA_NAME:"aggregatorHandler",EVENT_NAME:"aggregate",SOURCE:"source",TARGET:"target",prototype:{_is_aggregating:false,updateAttrs:function(){return this.updateTargetAttrs().updateSourceAttrs()},bind:function(){return this._bindSource(this.source)._bind(this.target,true)},_bind:function(a,b){a.bind("aggregate",
{aggregator:this,type:b?c.aggregator.TARGET:c.aggregator.SOURCE},this.aggregateCallback);return this},_bindSource:function(a){a.bind(this.options.onEvent,this.aggregateCallback);this._bind(a);return this},unbind:function(){this._unbind(this.source,true);this.target.unbind("aggregate",this.aggregateCallback);return this},_unbind:function(a,b){a=c(a);a.unbind(this.options.onEvent,this.aggregateCallback);b&&a.unbind("aggregate",this.aggregateCallback);return this},remove:function(a){var b=this;a=c(a);
var d=a[0];b.source=b.source.filter(function(g,e){var f=e==d;f&&b.removeFromHandler(e);return!f});return b._unbind(a).updateAttrs()},destroy:function(){var a=this;c.each(j,function(b,d){a[d]=a[d].filter(function(g,e){a.removeFromHandler(e,d);return false})});return this},removeFromHandler:function(a,b){var d=c.aggregator.get(a);c.aggregator.isHandler(d)||c.error("$.aggregator::removeFromHandler: element is not bound to a aggregator-handler");d.remove(this,b);return this},aggregate:function(){var a=
this;if(a._is_aggregating==false){var b=this.getAggregatedValue();if(a.options.tostring===true)b=String(b);if(b!==a.value||!b){a.value=b;a._is_aggregating=true;a.source.trigger("aggregate",[a,"source"]);a.target.each(function(d,g){if(g[a.target_attrs[d]]!==b){g[a.target_attrs[d]]=b;c(this).trigger("change")}}).trigger("aggregate",[a,"target"]);a._is_aggregating=false}}return a},getAggregatedValue:function(){var a=this,b=[];a.source.each(function(d,g){var e=a.options.parser(g[a.source_attrs[d]]);if(a.options.fix_NaN===
true&&e!=e)e=a.options.value_if_NaN;b.push(e)});return b.length>0?a.options.method.call(b):0}},options:{onEvent:"change keyup",method:"sum",parser:"int",fix_NaN:true,value_if_NaN:0,tostring:true,start_by_aggregate:true},isAggregator:function(a){return a instanceof c.aggregator},isHandler:function(a){return a instanceof c.aggregator.handler},addMethod:function(a,b){!a||c.type(b)!="function"||(m[a]=b)},addParser:function(a,b){!a||c.type(b)!="function"||(n[a]=b)},get:function(a){return(a=c(a).data("aggregatorHandler"))&&
c.aggregator.isHandler(a)?a:o},parseOptions:function(a){var b={};if(typeof a=="string")a={target:a};a=c.extend(true,b,c.aggregator.options,a);c.each(p,function(d,g){var e;e=typeof b[d];var f;if(e=="function")e=b[d];else{if(e=="string")f=g[b[d]];f||c.error("$.aggregator:: Unable to find option "+d);e=f}b[d]=e});return b}});c.each(["Target","Source"],function(a,b){var d=b.toLowerCase(),g="update"+b+"Attrs",e=d+"_attrs";c.aggregator.prototype["add"+b]=function(f){var h=this[d];f=c(f).filter(function(){var i=
c.inArray(this,h)==-1;if(i)h[h.length++]=this;return i});d=="source"?this._bindSource(f):this._bind(f,true);return this[g]()};c.aggregator.prototype[g]=function(){var f=this;this[e]=[];this[d].each(function(h,i){f[e][h]=i?c(i).is("input,textarea")?"value":"innerHTML":null});return this}});c.aggregator.prototype.add=c.aggregator.prototype.addSource;c.aggregator.handler=function(a){this.element=a;this.source=[];this.target=[]};c.aggregator.handler.prototype={get:function(a,b){if(!a){var d=[];c.merge(d,
this.source);c.merge(d,this.target);return d}c.inArray(a,j)==-1&&c.error("invalid type: "+a);(d=this[a])||c.error("$.aggregator.handler::add: invalid type: "+a);return typeof b=="number"?d[b]:d},add:function(a,b){var d=this.get(b);c.aggregator.isAggregator(a)||c.error("$.aggregator.handler::add: invalid input: aggregator is not an instance of $.aggregator");c.inArray(a,d)==-1&&d.push(a);return this},remove:function(a,b){var d=this;c.each(b?[b]:j,function(g,e){var f=d.get(e),h=0,i=f.length;for(f||
c.error("$.aggregator.handler::remove: invalid type: "+e);h<i;h++)f[h]===a&&delete f[f.length--]});return this},destroy:function(a){return this._callAggregatorMethod("remove",a,[this.element])},aggregate:function(a){return this._callAggregatorMethod("aggregate",a)},_callAggregatorMethod:function(a,b,d){b||(b="source");b=this.get(b);var g=b.length,e;for(d=d||[];g--;)(e=b[g])&&e[a].apply(e,d);return this}};c.event.special.aggregate={setup:function(){c.data(this,"aggregatorHandler",new c.aggregator.handler(this))},
add:function(a){if(a=a.data){var b=c.aggregator.get(this);c.aggregator.isHandler(b)&&c.aggregator.isAggregator(a.aggregator)&&b.add(a.aggregator,a.type)}},teardown:function(){var a=c.aggregator.get(this);if(c.aggregator.isHandler(a)){a.destroy();c.removeData(this,"aggregatorHandler")}}};var n={"int":parseInt,"float":parseFloat},m={sum:function(){for(var a=this[0],b=1,d=this.length;b<d;b++)a+=this[b];return a},multiply:function(){for(var a=this[0],b=1,d=this.length;b<d;b++)a*=this[b];return a},divide:function(){for(var a=
this[0],b=1,d=this.length;b<d;b++)a/=this[b];return a},sub:function(){for(var a=this[0],b=1,d=this.length;b<d;b++)a-=this[b];return a}},p={parser:n,method:m}})(jQuery);
